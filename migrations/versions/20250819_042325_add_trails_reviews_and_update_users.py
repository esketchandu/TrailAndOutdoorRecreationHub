"""Add trails reviews and update users

Revision ID: 3e282587f954
Revises: ffdc0a98111c
Create Date: 2025-08-19 04:23:25.113204

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision = '3e282587f954'
down_revision = 'ffdc0a98111c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('trails',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('difficulty', sa.String(length=20), nullable=False),
    sa.Column('length_km', sa.Float(), nullable=False),
    sa.Column('elevation_gain_m', sa.Float(), nullable=True),
    sa.Column('geometry', geoalchemy2.types.Geometry(geometry_type='LINESTRING', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('region', sa.String(length=100), nullable=True),
    sa.Column('parking_info', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('avg_rating', sa.Float(), nullable=True),
    sa.Column('total_reviews', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('trails', schema=None) as batch_op:
        # Create spatial index only if it doesn't exist
        # batch_op.create_index('idx_trails_geometry', ['geometry'], unique=False, postgresql_using='gist')
        op.execute("CREATE INDEX IF NOT EXISTS idx_trails_geometry ON trails USING GIST (geometry)")
        batch_op.create_index(batch_op.f('ix_trails_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_trails_name'), ['name'], unique=False)

    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trail_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('hiked_date', sa.Date(), nullable=False),
    sa.Column('weather_condition', sa.String(length=50), nullable=True),
    sa.Column('trail_condition', sa.String(length=50), nullable=True),
    sa.Column('crowd_level', sa.String(length=20), nullable=True),
    sa.Column('helpful_count', sa.Integer(), nullable=True),
    sa.Column('is_verified_hike', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['trail_id'], ['trails.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('trail_id', 'user_id', name='_trail_user_uc')
    )
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reviews_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_reviews_trail_id'), ['trail_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reviews_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('first_name', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('last_name', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('bio', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('avatar_url', sa.String(length=500), nullable=True))
        batch_op.add_column(sa.Column('hiking_level', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_admin', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))

    # Set defaults for existing rows
    op.execute("UPDATE users SET hiking_level = 'beginner' WHERE hiking_level IS NULL")
    op.execute("UPDATE users SET is_active = true WHERE is_active IS NULL")
    op.execute("UPDATE users SET is_admin = false WHERE is_admin IS NULL")
    op.execute("UPDATE users SET created_at = NOW() WHERE created_at IS NULL")
    op.execute("UPDATE users SET updated_at = NOW() WHERE updated_at IS NULL")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('is_admin')
        batch_op.drop_column('is_active')
        batch_op.drop_column('hiking_level')
        batch_op.drop_column('avatar_url')
        batch_op.drop_column('bio')
        batch_op.drop_column('last_name')
        batch_op.drop_column('first_name')

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reviews_user_id'))
        batch_op.drop_index(batch_op.f('ix_reviews_trail_id'))
        batch_op.drop_index(batch_op.f('ix_reviews_created_at'))

    op.drop_table('reviews')
    with op.batch_alter_table('trails', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_trails_name'))
        batch_op.drop_index(batch_op.f('ix_trails_created_at'))
        batch_op.drop_index('idx_trails_geometry', postgresql_using='gist')

    op.drop_table('trails')
    # ### end Alembic commands ###
